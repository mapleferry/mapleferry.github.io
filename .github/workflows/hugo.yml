name: Deploy Hugo site to Pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.145.0
    steps:
      - name: Install Hugo CLI
        run: |
          echo ">>> 开始安装Hugo CLI..."
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
          echo "<<< Hugo CLI安装完成"
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup theme
        run: |
          echo ">>> 开始设置主题..."
          mkdir -p themes
          echo ">>> 检查themes目录："
          ls -la themes/
          echo ">>> 强制重新克隆主题，使用最新版本..."
          rm -rf themes/PaperMod
          git clone --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod
          echo ">>> 检查克隆的主题目录结构："
          ls -la themes/PaperMod/
          find themes/PaperMod/ -maxdepth 2 -type d | sort
          echo "<<< 主题设置完成"
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Pre-build check
        run: |
          echo ">>> 开始构建前检查..."
          echo ">>> 当前目录结构："
          find . -maxdepth 3 -type d | sort
          echo ">>> 主题配置："
          ls -la themes/PaperMod/
          echo ">>> 内容目录："
          ls -la content/
          echo "<<< 构建前检查完成"

      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
        run: |
          echo ">>> 查看Hugo版本信息："
          hugo version
          echo ">>> 打印Hugo配置信息："
          hugo config | grep -i "theme\|baseurl\|publishdir"
          echo ">>> 开始Hugo构建..."
          hugo \
            --gc \
            --minify \
            --logLevel info \
            --printPathWarnings \
            --baseURL="${{ steps.pages.outputs.base_url }}"
          echo "<<< Hugo构建完成"

      - name: Debug output
        run: |
          echo ">>> 开始调试输出..."
          echo ">>> 检查站点结构："
          ls -la public/
          echo ">>> 检查CSS目录："
          ls -la public/css/ || echo "No CSS directory found"
          echo ">>> 检查index HTML："
          head -n 30 public/index.html || echo "No index.html found"
          echo ">>> 检查资源文件："
          find public/ -name "*.css" -o -name "*.js" | sort
          echo ">>> 检查配置文件："
          cat config.yaml
          echo ">>> 检查主题内容："
          ls -la themes/ || echo "No themes directory"
          echo ">>> PaperMod主题内容："
          ls -la themes/PaperMod/ || echo "No PaperMod theme directory"
          echo ">>> PaperMod布局文件："
          find themes/PaperMod/ -name "*.html" | head -n 10 || echo "No html files in theme"
          echo "<<< 调试输出完成"
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4